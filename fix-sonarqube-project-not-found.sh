#!/bin/bash

echo "üîß SonarQube 'Project Not Found' Error Fix"
echo "=========================================="
echo ""

SONAR_URL="http://192.168.47.147:9000"
PROJECT_KEY="demo-website"

echo "üîç Diagnosing the issue..."
echo ""

echo "1. üìä SonarQube Server Status:"
SERVER_STATUS=$(curl -s "$SONAR_URL/api/system/status" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
echo "   Status: $SERVER_STATUS"
echo ""

echo "2. üîê Authentication Test:"
AUTH_STATUS=$(curl -s "$SONAR_URL/api/authentication/validate" | grep -o '"valid":[^,}]*')
echo "   Current auth: $AUTH_STATUS"
echo ""

echo "3. üß™ Testing Different Authentication Methods:"
echo "   Testing no auth..."
NO_AUTH=$(curl -s -w "%{http_code}" -o /dev/null "$SONAR_URL/api/projects/search")
echo "   No auth result: HTTP $NO_AUTH"

echo "   Testing admin/admin..."
ADMIN_AUTH=$(curl -s -w "%{http_code}" -o /dev/null -u admin:admin "$SONAR_URL/api/projects/search")
echo "   admin/admin result: HTTP $ADMIN_AUTH"

echo "   Testing admin/password..."
PASS_AUTH=$(curl -s -w "%{http_code}" -o /dev/null -u admin:password "$SONAR_URL/api/projects/search")
echo "   admin/password result: HTTP $PASS_AUTH"
echo ""

echo "üéØ SOLUTION OPTIONS:"
echo "==================="
echo ""

if [ "$NO_AUTH" = "200" ]; then
    echo "‚úÖ SOLUTION 1: Authentication is disabled - project should be visible"
    echo "   Try accessing: $SONAR_URL/dashboard?id=$PROJECT_KEY"
elif [ "$ADMIN_AUTH" = "200" ] || [ "$PASS_AUTH" = "200" ]; then
    echo "‚úÖ SOLUTION 1: Authentication works - login to see projects"
    if [ "$ADMIN_AUTH" = "200" ]; then
        echo "   Use: admin/admin"
    else
        echo "   Use: admin/password"
    fi
else
    echo "‚ùå AUTHENTICATION ISSUE DETECTED"
    echo ""
    echo "üîß SOLUTION 1: Reset SonarQube Admin Password"
    echo "--------------------------------------------"
    echo "If you have access to SonarQube container:"
    echo "1. Find SonarQube container:"
    echo "   docker ps | grep sonar"
    echo ""
    echo "2. Access container:"
    echo "   docker exec -it [container-name] bash"
    echo ""
    echo "3. Reset admin password (if possible):"
    echo "   # This depends on SonarQube version and setup"
    echo ""
    echo "üîß SOLUTION 2: Disable Authentication (Demo Only)"
    echo "------------------------------------------------"
    echo "If you can access SonarQube admin panel:"
    echo "1. Try different password combinations"
    echo "2. Check if there's a 'Forgot Password' option"
    echo "3. Look for admin panel access"
    echo ""
    echo "üîß SOLUTION 3: Recreate Project with Token"
    echo "------------------------------------------"
    echo "If you can get a valid token:"
    echo "1. Generate token in SonarQube"
    echo "2. Run manual scan with token:"
    echo ""
    echo "cd /tmp/demo-website-repo"
    echo "/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQ/bin/sonar-scanner \\"
    echo "  -Dsonar.projectKey=$PROJECT_KEY \\"
    echo "  -Dsonar.projectName=\"DevOps Demo Website\" \\"
    echo "  -Dsonar.sources=. \\"
    echo "  -Dsonar.host.url=$SONAR_URL \\"
    echo "  -Dsonar.token=YOUR_TOKEN_HERE"
    echo ""
fi

echo "üîß SOLUTION 4: Check SonarQube Container Logs"
echo "---------------------------------------------"
echo "Check what's happening in SonarQube:"
echo "1. Find SonarQube container:"
echo "   docker ps | grep sonar"
echo ""
echo "2. Check logs:"
echo "   docker logs [container-name] | tail -50"
echo ""
echo "3. Look for authentication or database errors"
echo ""

echo "üîß SOLUTION 5: Restart SonarQube Service"
echo "----------------------------------------"
echo "Sometimes a restart fixes authentication issues:"
echo "1. Restart SonarQube container:"
echo "   docker restart [sonarqube-container]"
echo ""
echo "2. Wait for startup (2-3 minutes)"
echo "3. Try accessing again"
echo ""

echo "üîß SOLUTION 6: Manual Project Creation"
echo "--------------------------------------"
echo "If you can access SonarQube GUI:"
echo "1. Login to SonarQube: $SONAR_URL"
echo "2. Go to Projects ‚Üí Create Project"
echo "3. Manual setup:"
echo "   - Project key: $PROJECT_KEY"
echo "   - Display name: DevOps Demo Website"
echo "4. Generate token and use in Jenkins"
echo ""

echo "üß™ QUICK TEST COMMANDS:"
echo "======================="
echo ""
echo "# Test SonarQube access:"
echo "curl -v $SONAR_URL/"
echo ""
echo "# Test API access:"
echo "curl -s $SONAR_URL/api/system/status"
echo ""
echo "# Test with different credentials:"
echo "curl -u admin:admin $SONAR_URL/api/projects/search"
echo ""
echo "# Check SonarQube container:"
echo "docker ps | grep sonar"
echo "docker logs [container-name] | tail -20"
echo ""

echo "üéØ MOST LIKELY CAUSE:"
echo "====================="
echo "The SonarQube admin password has been changed from default"
echo "or the authentication system requires a token."
echo ""
echo "Try these in order:"
echo "1. Check if you can access $SONAR_URL in browser"
echo "2. Try logging in with different passwords"
echo "3. Look for 'Forgot Password' or admin reset options"
echo "4. Check SonarQube container logs for errors"
echo "5. Restart SonarQube container if needed"
echo ""

echo "üìû NEED HELP?"
echo "============="
echo "If none of these solutions work:"
echo "1. Share the SonarQube container logs"
echo "2. Confirm if you can access $SONAR_URL in browser"
echo "3. Let me know what authentication methods you've tried"
echo ""

echo "üîó USEFUL LINKS:"
echo "================"
echo "- SonarQube: $SONAR_URL"
echo "- Project Dashboard: $SONAR_URL/dashboard?id=$PROJECT_KEY"
echo "- Admin Panel: $SONAR_URL/admin"
echo "- Login Page: $SONAR_URL/sessions/new"
