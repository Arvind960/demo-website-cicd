#!/bin/bash

echo "ðŸ”§ Recreate SonarQube Demo-Website Project"
echo "=========================================="
echo ""

SONAR_URL="http://192.168.47.147:9000"
PROJECT_KEY="demo-website"
PROJECT_NAME="DevOps Demo Website"

echo "ðŸŽ¯ STEP-BY-STEP SOLUTION:"
echo "========================="
echo ""

echo "STEP 1: Access SonarQube Web Interface"
echo "--------------------------------------"
echo "1. Open your web browser"
echo "2. Navigate to: $SONAR_URL"
echo "3. Try to login with these credentials (in order):"
echo "   - admin / admin"
echo "   - admin / password"
echo "   - admin / sonar"
echo "   - admin / [blank]"
echo ""

echo "STEP 2: If Login Fails - Reset Authentication"
echo "---------------------------------------------"
echo "If you cannot login, try these approaches:"
echo ""
echo "A) Check for 'Forgot Password' link on login page"
echo "B) Look for admin reset options"
echo "C) Try accessing without authentication:"
echo "   - Some SonarQube instances allow anonymous access"
echo "   - Check if you can see projects without logging in"
echo ""

echo "STEP 3: Manual Project Creation (If you can login)"
echo "--------------------------------------------------"
echo "1. After successful login:"
echo "2. Go to 'Projects' in the top menu"
echo "3. Click 'Create Project'"
echo "4. Choose 'Manually'"
echo "5. Enter project details:"
echo "   - Project key: $PROJECT_KEY"
echo "   - Display name: $PROJECT_NAME"
echo "6. Click 'Set Up'"
echo "7. Generate a token when prompted"
echo "8. Copy the token for later use"
echo ""

echo "STEP 4: Run Manual Analysis with Token"
echo "--------------------------------------"
echo "After getting a token, run this command:"
echo ""
echo "cd /tmp/demo-website-repo"
echo "/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQ/bin/sonar-scanner \\"
echo "  -Dsonar.projectKey=$PROJECT_KEY \\"
echo "  -Dsonar.projectName=\"$PROJECT_NAME\" \\"
echo "  -Dsonar.projectVersion=1.0 \\"
echo "  -Dsonar.sources=. \\"
echo "  -Dsonar.exclusions=\"node_modules/**,**/*.min.js,**/*.min.css,Dockerfile,nginx.conf\" \\"
echo "  -Dsonar.sourceEncoding=UTF-8 \\"
echo "  -Dsonar.javascript.file.suffixes=.js \\"
echo "  -Dsonar.css.file.suffixes=.css \\"
echo "  -Dsonar.html.file.suffixes=.html \\"
echo "  -Dsonar.host.url=$SONAR_URL \\"
echo "  -Dsonar.token=YOUR_TOKEN_HERE"
echo ""

echo "STEP 5: Alternative - Disable Authentication (Demo Only)"
echo "--------------------------------------------------------"
echo "If you can access admin settings:"
echo "1. Login as admin"
echo "2. Go to Administration â†’ Security â†’ General"
echo "3. Turn OFF 'Force user authentication'"
echo "4. Save settings"
echo "5. Refresh browser - projects should be visible without login"
echo ""

echo "STEP 6: Update Jenkins Configuration"
echo "------------------------------------"
echo "After creating the project and getting a token:"
echo "1. Go to Jenkins: http://localhost:8080"
echo "2. Manage Jenkins â†’ Manage Credentials"
echo "3. Add new credential:"
echo "   - Kind: Secret text"
echo "   - Secret: [your SonarQube token]"
echo "   - ID: sonar-token"
echo "4. Go to Manage Jenkins â†’ Configure System"
echo "5. Find SonarQube servers section"
echo "6. Add/Update server:"
echo "   - Name: SonarQ"
echo "   - Server URL: $SONAR_URL"
echo "   - Server authentication token: sonar-token"
echo ""

echo "ðŸ§ª QUICK VERIFICATION COMMANDS:"
echo "==============================="
echo ""
echo "# Test SonarQube web access:"
echo "curl -I $SONAR_URL"
echo ""
echo "# Test with token (replace YOUR_TOKEN):"
echo "curl -H \"Authorization: Bearer YOUR_TOKEN\" $SONAR_URL/api/projects/search"
echo ""
echo "# Test project existence:"
echo "curl -H \"Authorization: Bearer YOUR_TOKEN\" \"$SONAR_URL/api/projects/search?projects=$PROJECT_KEY\""
echo ""

echo "ðŸŽ¯ EXPECTED RESULTS:"
echo "==================="
echo "After successful setup:"
echo "âœ… Project visible at: $SONAR_URL/dashboard?id=$PROJECT_KEY"
echo "âœ… Jenkins pipeline SonarQube stage succeeds"
echo "âœ… Quality gate results appear in Jenkins"
echo "âœ… Code analysis metrics visible in SonarQube"
echo ""

echo "ðŸš¨ TROUBLESHOOTING:"
echo "==================="
echo "If you still get 'Project not found':"
echo ""
echo "1. Verify project key matches exactly: '$PROJECT_KEY'"
echo "2. Check if project was created in different SonarQube instance"
echo "3. Ensure you're using the correct SonarQube URL"
echo "4. Verify token has correct permissions"
echo "5. Check SonarQube logs for errors"
echo ""

echo "ðŸ“‹ CHECKLIST:"
echo "============="
echo "â–¡ Can access $SONAR_URL in browser"
echo "â–¡ Can login to SonarQube admin panel"
echo "â–¡ Project '$PROJECT_KEY' exists in SonarQube"
echo "â–¡ Generated authentication token"
echo "â–¡ Updated Jenkins credentials with token"
echo "â–¡ Updated Jenkins SonarQube server configuration"
echo "â–¡ Ran successful SonarQube analysis"
echo "â–¡ Project visible in SonarQube dashboard"
echo ""

echo "ðŸ”— DIRECT LINKS:"
echo "================"
echo "- SonarQube Home: $SONAR_URL"
echo "- Login Page: $SONAR_URL/sessions/new"
echo "- Create Project: $SONAR_URL/projects/create"
echo "- Project Dashboard: $SONAR_URL/dashboard?id=$PROJECT_KEY"
echo "- Jenkins Config: http://localhost:8080/configure"
echo ""

echo "ðŸ’¡ PRO TIP:"
echo "==========="
echo "The most common cause of 'Project not found' is authentication issues."
echo "Focus on getting proper login credentials or token first, then the"
echo "project creation will be straightforward."
echo ""

echo "ðŸš€ Ready to fix your SonarQube project!"
echo "Follow the steps above in order for best results."
